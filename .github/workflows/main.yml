name: A workflow for my SQL reports App
on: push

jobs:
  
    UnitTests:
      name: Unit Tests
      runs-on: ubuntu-20.04
  
      steps:
        - name: Checkout code
          uses: actions/checkout@v2
  
        - name: Set up JDK 17
          uses: actions/setup-java@v2
          with:
            java-version: '17'
            distribution: 'adopt'

        - name: Cache Maven dependencies
          uses: actions/cache@v2
          with:
            path: ~/.m2/repository
            key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
            restore-keys: |
              ${{ runner.os }}-maven-
  
        - name: Start Docker Compose Services
          run: docker-compose up -d db  # Start the db service only

        - name: Wait for MySQL to be ready
          run: |
            for i in {1..10}; do
              if docker exec world_db mysqladmin ping -h"localhost" --silent; then
                echo "Database is up!"
                break
              fi
              echo "Waiting for database... ($i/10)"
              sleep 6
            done

        - name: Run Unit Tests
          env:
            MYSQL_ROOT_PASSWORD: rootpassword
            SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/world
            SPRING_DATASOURCE_USERNAME: user
            SPRING_DATASOURCE_PASSWORD: password
          run: mvn test
  
    build:
      name: Build and Run with Docker Compose
      runs-on: ubuntu-20.04
      needs: UnitTests
  
      steps:
        - name: Checkout code
          uses: actions/checkout@v2
  
        - name: Set up JDK 17
          uses: actions/setup-java@v2
          with:
            java-version: '17'
            distribution: 'adopt'

        - name: Cache Maven dependencies
          uses: actions/cache@v2
          with:
            path: ~/.m2/repository
            key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
            restore-keys: |
              ${{ runner.os }}-maven-
  
        - name: Run Docker Compose
          run: docker-compose up -d
